# Scroll up with mouse
set-option -g mouse on
set -g set-clipboard on

# Scrollback buffer
set -g history-limit 100000

# tmux display things in 256 colors
# set-option -g default-terminal "screen-256color"
set-option -g default-terminal "xterm-256color"
set-option -g terminal-overrides "xterm-256color"

# allow for navigating between words with option
set-window-option -g xterm-keys on

# command delay? We don't want that, make it short
set -g escape-time 10

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Set window notifications
set -g monitor-activity on
set -g visual-activity on

# Update files on focus (using for vim)
set -g focus-events on

# Status update interval
set -g status-interval 1

# With this you set the window name in the status line.
# Beware of outrageous prompts, such as the default one in RHEL 7.
set -g set-titles on
set -g set-titles-string "#{pane_current_path}"
set -g automatic-rename on

# Reduce time to wait for Escape key. You'll want this for neovim.
set-option escape-time 40

# Allow us to reload our Tmux configuration while
# using Tmux
bind 'r' source-file ~/.tmux.conf \; display "Reloaded!"

######### DISPLAY ##########
set -g renumber-windows on    # renumber windows when a window is closed

######### NAVIGATION #######
# Rotate the layout
# bind-key enter next-layout
bind 'c' new-window -c "#{pane_current_path}"

# split current window horizontally
bind '-' split-window -v -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind "\\" split-window -v -p 25 -c "#{pane_current_path}"

# split current window vertically
bind '_' split-window -h -c "#{pane_current_path}"
bind '%' split-window -h -c "#{pane_current_path}"
bind '|' split-window -h -p 25 -c "#{pane_current_path}"

# Vim bindings for copy mode
set -g mode-keys vi

# -- copy mode -----------------------------------------------------------------
bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

# pane navigation
bind -r 'h' select-pane -L  # move left
bind -r 'j' select-pane -D  # move down
bind -r 'k' select-pane -U  # move up
bind -r 'l' select-pane -R  # move right
bind '>' swap-pane -D       # swap current pane with the next one
bind '<' swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r 'H' resize-pane -L 5
bind -r 'J' resize-pane -D 5
bind -r 'K' resize-pane -U 5
bind -r 'L' resize-pane -R 5

set-option -g status-position bottom
## COLORSCHEME: gruvbox dark
set -g mode-style fg=colour237,bg=colour245
set-option -g status "on"

# default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# pane border
set-option -g pane-active-border-style fg=colour250 #fg2
# set-option -g pane-active-border-style fg=colour109 #fg2
set-option -g pane-border-style fg=colour237 #bg1

# message infos
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[fg=colour248, bg=colour241] #S #[fg=colour241, bg=colour237, nobold, noitalics, nounderscore] "
set-option -g status-right "#[fg=colour239, bg=colour237, nobold, nounderscore, noitalics]#[fg=colour246,bg=colour239] #(gitmux #{pane_current_path}) #[fg=colour248, bg=colour239, nobold, noitalics, nounderscore]#[fg=colour241, bg=colour239]#[fg=colour248, bg=colour241] %H:%M:%S "

set-window-option -g window-status-current-format "#[fg=colour237, bg=colour214, nobold, noitalics, nounderscore]#[fg=colour239, bg=colour214, bold] #{b:pane_current_path} #[fg=colour214, bg=colour237, nobold, noitalics, nounderscore]"
set-window-option -g window-status-format "#[fg=colour237,bg=colour239,noitalics]#[fg=colour223, bg=colour239] #{b:pane_current_path} #[fg=colour239, bg=colour237, noitalics]"


#if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

#set -g @yank_selection 'clipboard' # or 'secondary' or 'clipboard'
#set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'
#set -g @yank_action 'copy-pipe'

# dnf install xsel
#set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'egel/tmux-gruvbox'

#run -b '~/.tmux/plugins/tpm/tpm'

